" This program is free software. It comes without any warranty, to
" the extent permitted by applicable law. You can redistribute it
" and/or modify it under the terms of the Do What The Fuck You Want
" To Public License, Version 2, as published by Sam Hocevar. See
" http://sam.zoy.org/wtfpl/COPYING for more details.

map <F4> a<C-R>=strftime("%c")<CR><Esc>
map <F2> aJohn Chee<Esc>

set tabstop=8
set shiftwidth=2
set shiftround
set expandtab
set nobackup
set ruler
set number
set showmatch
set mat=5
set visualbell
set ignorecase
set smartcase
set nohlsearch
set incsearch
set smarttab
set autoindent smartindent
set backspace=indent,eol,start
set nocompatible
set list listchars=tab:>-,trail:.
set mouse=a
set completeopt=menu,preview,longest
set laststatus=2
set confirm
set wildignore=*.swp
filetype plugin indent on

inoremap ht <esc>

"OCaml
autocmd FileType omlet nmap <F3> :exec 'echomsg (system("~/.vim/scripts/ocaml.annot.pl' bufname('%') (line2byte(line('.'))+col('.')-1) '"))'<RETURN>
autocmd FileType omlet setlocal makeprg=omake\ -j16\ `basename\ %\ .ml`
autocmd FileType omlet set wildignore=*.cmx,*.cma,*.a

"Perl
autocmd BufEnter *.pl :%!perltidy
autocmd BufWritePre *.pl :%!perltidy
autocmd FileType perl setlocal matchpairs+=<:>
"highlight advanced perl vars inside strings
autocmd FileType perl let perl_extended_vars=1
autocmd FileType perl iab phbp #!/usr/bin/perl<cr><left><cr>use warnings;<cr>

"Haskell
"autocmd FileType haskell set wildignore=*.o,*.hi

"Text
autocmd BufNewFile,BufRead *.txt setlocal spell

"All files
autocmd BufEnter * call RemoveRedundantSpace()
"autocmd BufWritePre * :%s/\s\+$//e

function! RemoveRedundantSpace()
  if &modifiable > 0
    "remove trailing whitespace after lines
    :%s/\s\+$//e
  else
    return
  endif
endfunction

"intelligently decide whether to insert
"a tab or a completed word
function! InsertTabWrapper(direction)
   let col = col('.') - 1
   if !col || getline('.')[col - 1] !~ '\k'
   return "\<tab>"
   elseif "backward" == a:direction
   return "\<c-p>"
   else
   return "\<c-n>"
   endif
endfunction

inoremap <tab> <c-r>=InsertTabWrapper ("forward")<cr>
inoremap <s-tab> <c-r>=InsertTabWrapper ("backward")<cr>

" setup for the visual environment
:if has('gui_running')
    set guioptions-=T
    set guioptions+=c
    "set guifont=-schumacher-clean-medium-r-normal-*-*-120-*-*-c-*-iso646.1991-irv
    "set guifont=Monospace\ 8,Terminal\ 8,fixed
    highlight Normal guibg=black guifg=white
    highlight Visual guibg=white guifg=black
:else
    set bg=dark
:endif

" I like the harshness of 16 colors
"set t_Co=256

" Better command-line completion
set wildmenu
set wildmode=longest:full,full
